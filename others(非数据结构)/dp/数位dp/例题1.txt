/*
* 求[n,m]中 奇数的连续长度为偶数， 偶数的连续长度为奇数的 数字的个数
* 如 1122295138352 ( 11 222 9513 8 35 2)
*
**/

ll DP[20][20][3];
int DIG[20];
ll dfs(int pos,int shu,int iso,int limit)//iso(储存奇偶)，shu（连续长度）
{
    //printf("%d\n",pos);
    if(pos < 1)
    {
        if(shu==0) return 0;
        else if(iso==1 && shu%2==1)
            {return 1;}
        else if(iso==2 && shu%2==0)
            {return 1;}
        else {return 0;}
    }

    if(!limit && DP[pos][shu][iso] != -1)
        return    DP[pos][shu][iso];

    ll    end1 = limit ? DIG[pos] : 9;
    ll    ret = 0;
    for(int i = 0;i <= end1;i ++)
    {
        //printf("%d %d %d %d\n",i,iso,end1,pos);
        if(iso==0 && i==0)
        {
            ret+=dfs(pos-1,shu,0,limit && (i == end1));
        }
        else if(iso==0)
            ret += dfs(pos - 1,shu+1,i%2+1,limit && (i == end1));
        else if(iso==1)//oushu
        {
            if(i%2==0)//oushu
            {
                ret += dfs(pos - 1,shu+1,i%2+1,limit && (i == end1));
            }
            else
            {
                if(shu%2==1)
                    ret += dfs(pos - 1,1,i%2+1,limit && (i == end1));
                else continue;
            }
        }
        else if(iso==2)//jishu
        {
            if(i%2==0)//oushu
            {
                if(shu%2==0)
                    ret += dfs(pos - 1,1,i%2+1,limit && (i == end1));
                else continue;
            }
            else
            {
                ret += dfs(pos - 1,shu+1,i%2+1,limit && (i == end1));
            }
        }
    }
    if(!limit)
        DP[pos][shu][iso] = ret;

    return  ret;
}
ll cal(ll x)
{
    int len=0;
    while(x)
    {
        DIG[++len]=x%10;
        x=x/10;
    }
    return dfs(len,0,0,1);
}
int main()
{
    int t=0;
    ll n,m;
    int z;
    scanf("%d",&z);
    while(z--)
    {scanf("%lld%lld",&n,&m);
        ll k;
        if(n==0 && m==0)
            break;
        memset(DP,-1,sizeof(DP));
        printf("Case #%d: ",++t);
        printf("%I64d\n",cal(m)-cal(n-1));
    }
    return 0;
}